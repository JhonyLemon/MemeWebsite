CREATE TABLE IF NOT EXISTS ACCOUNT_ROLE(
    ID BIGSERIAL PRIMARY KEY,
    ROLE VARCHAR(255)
);
CREATE TABLE IF NOT EXISTS ACCOUNT_PERMISSION(
    ID BIGSERIAL PRIMARY KEY,
    PERMISSION VARCHAR(255)
);
CREATE TABLE IF NOT EXISTS ACCOUNT_ROLE_PERMISSION(
    PERMISSION_ID BIGINT NOT NULL,
    ACCOUNT_ROLE_ID BIGINT NOT NULL,
    CONSTRAINT ACCOUNT_ROLE_PERMISSION__ACCOUNT_ROLE__FOREIGN_KEY
        FOREIGN KEY(ACCOUNT_ROLE_ID)
            REFERENCES ACCOUNT_ROLE(ID),
    CONSTRAINT ACCOUNT_ROLE_PERMISSION__ACCOUNT_PERMISSION__FOREIGN_KEY
        FOREIGN KEY(PERMISSION_ID)
            REFERENCES ACCOUNT_PERMISSION(ID)
);

INSERT INTO ACCOUNT_ROLE(ROLE)
VALUES ('ADMIN'),
       ('MODERATOR'),
       ('USER');
INSERT INTO ACCOUNT_PERMISSION(PERMISSION)
VALUES ('READ_SOMETHING'),
       ('EDIT_SOMETHING'),
       ('DELETE_SOMETHING');

INSERT INTO ACCOUNT_ROLE_PERMISSION(ACCOUNT_ROLE_ID,PERMISSION_ID)
VALUES (1,1),
       (1,2),
       (1,3),
       (2,1),
       (2,2),
       (1,1),
       (1,2);

CREATE TABLE IF NOT EXISTS ACCOUNT(
    ID BIGSERIAL PRIMARY KEY,
    ACCOUNT_NAME VARCHAR(254) NOT NULL,
    EMAIL VARCHAR(254) NOT NULL UNIQUE,
    PASSWORD VARCHAR(500) NOT NULL,
    ENABLED BOOLEAN NOT NULL DEFAULT TRUE,
    BANNED BOOLEAN NOT NULL DEFAULT FALSE,
    ACCOUNT_ROLE_ID BIGINT NOT NULL,
    CONSTRAINT ACCOUNT__ACCOUNT_ROLE__FOREIGN_KEY
        FOREIGN KEY(ACCOUNT_ROLE_ID)
            REFERENCES ACCOUNT_ROLE(ID)
);

CREATE TABLE IF NOT EXISTS TAG(
    ID BIGSERIAL PRIMARY KEY,
    TAG VARCHAR(128) NOT NULL
);

CREATE TABLE IF NOT EXISTS POST(
    ID BIGSERIAL PRIMARY KEY,
    TITLE VARCHAR(128) NOT NULL,
    CREATION_TIME DATE NOT NULL,
    VISIBLE BOOLEAN NOT NULL DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS POST_TAG(
    TAG_ID BIGINT NOT NULL,
    POST_ID BIGINT NOT NULL,
    CONSTRAINT POST_TAG__TAG__FOREIGN_KEY
        FOREIGN KEY(TAG_ID)
            REFERENCES TAG(ID),
    CONSTRAINT POST_TAG__POST__FOREIGN_KEY
        FOREIGN KEY(POST_ID)
            REFERENCES POST(ID)
);

CREATE TABLE IF NOT EXISTS POST_FILE(
    ID BIGSERIAL NOT NULL PRIMARY KEY,
    POST_ID BIGINT NOT NULL,
    FILE_NAME TEXT NOT NULL,
    FILE BYTEA NOT NULL,
    MIME_TYPE VARCHAR(100) NOT NULL,
    DESCRIPTION TEXT,
    CONSTRAINT POST_FILE__POST__FOREIGN_KEY
        FOREIGN KEY(POST_ID)
            REFERENCES POST(ID)
);

CREATE TABLE IF NOT EXISTS POST_STATISTIC(
    ID BIGSERIAL NOT NULL PRIMARY KEY,
    POST_ID BIGINT NOT NULL,
    ACCOUNT_ID BIGINT NOT NULL,
    SEEN BOOLEAN NOT NULL DEFAULT FALSE,
    VOTE BOOLEAN DEFAULT NULL,
    FAVORITE BOOLEAN NOT NULL DEFAULT FALSE,
    CONSTRAINT POST_STATISTIC__POST__FOREIGN_KEY
        FOREIGN KEY(POST_ID)
            REFERENCES POST(ID),
    CONSTRAINT POST_STATISTIC__ACCOUNT__FOREIGN_KEY
        FOREIGN KEY(ACCOUNT_ID)
            REFERENCES ACCOUNT(ID)
);

CREATE TABLE IF NOT EXISTS COMMENT(
    ID BIGSERIAL NOT NULL PRIMARY KEY,
    POST_ID BIGINT NOT NULL,
    ACCOUNT_ID BIGINT NOT NULL,
    ANSWER_TO_ID BIGINT,
    COMMENT VARCHAR(300) NOT NULL,
    CONSTRAINT COMMENT__POST__FOREIGN_KEY
        FOREIGN KEY(POST_ID)
            REFERENCES POST(ID),
    CONSTRAINT COMMENT__ACCOUNT__FOREIGN_KEY
        FOREIGN KEY(ACCOUNT_ID)
            REFERENCES ACCOUNT(ID)
);

CREATE TABLE IF NOT EXISTS COMMENT_STATISTIC(
    ID BIGSERIAL NOT NULL PRIMARY KEY,
    COMMENT_ID BIGINT NOT NULL,
    ACCOUNT_ID BIGINT NOT NULL,
    VOTE BOOLEAN DEFAULT NULL,
    CONSTRAINT VOTE_COMMENT__COMMENT__FOREIGN_KEY
        FOREIGN KEY(COMMENT_ID)
            REFERENCES COMMENT(ID),
    CONSTRAINT VOTE_COMMENT__ACCOUNT__FOREIGN_KEY
        FOREIGN KEY(ACCOUNT_ID)
            REFERENCES ACCOUNT(ID)
);

